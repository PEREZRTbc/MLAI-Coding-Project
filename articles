import requests
import pandas as pd
import time
from datetime import datetime, timedelta

API_KEY = "d6c772a3-c100-49b4-88f2-87c130e4bca0"
base_url = "https://api.goperigon.com/v1/all"
symbol = "MSFT"
start_date = datetime(2022, 1, 1)
end_date = datetime(2024, 1, 1)  # Adjusted for a broader range
current_date = start_date

# Initialize an empty dataframe for accumulating results
accumulated_df = pd.DataFrame()

while current_date <= end_date:
    # The start and end of the period (five days)
    period_start = current_date
    period_end = min(current_date + timedelta(days=4), end_date)

    # Construct the request URL for the current period
    url = f"{base_url}?companySymbol={symbol}&from={period_start.strftime('%Y-%m-%d')}&to={period_end.strftime('%Y-%m-%d')}&apiKey={API_KEY}"
    print("Requesting:", url)
    resp = requests.get(url)

    if resp.status_code == 200:
        data = resp.json().get('articles', [])
        if data:  # Check if there's any data returned
            df = pd.DataFrame(data)
            df['StockSymbol'] = symbol
            # Append the new data to the accumulated dataframe
            accumulated_df = pd.concat([accumulated_df, df], ignore_index=True)
            print(f"Fetched data for {period_start.strftime('%Y-%m-%d')} to {period_end.strftime('%Y-%m-%d')}")
        else:
            print(f"No data for {period_start.strftime('%Y-%m-%d')} to {period_end.strftime('%Y-%m-%d')}")
    else:
        print(f"Failed to fetch data for {period_start.strftime('%Y-%m-%d')} to {period_end.strftime('%Y-%m-%d')}")

    # Move to the next period (five days)
    current_date = period_end + timedelta(days=1)
    time.sleep(1)  # Throttle the requests

# Check if any data was collected and display summary if so
if not accumulated_df.empty:
    print(accumulated_df.describe())
else:
    print("No data collected.")
if not accumulated_df.empty:
    # Export the DataFrame to a CSV file
    accumulated_df.to_csv(f'data{symbol}.csv', index=False)
    print("Data exported to data.csv")
else:
    print("No data to export.")
